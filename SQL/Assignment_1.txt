1. Login to MySQL and view all databases already present. You should get
following result :

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| demo               |
| fbs                |
| gg                 |
| information_schema |
| may2025batch       |
| my_data            |
| mysql              |
| nexanova           |
| nikhil             |
| performance_schema |
| pp                 |
| project            |
| raisoni            |
| raisoni1           |
| room               |
| sunday             |
| trainerdb          |
+--------------------+
17 rows in set (0.00 sec)


2. Write an SQL statement to create a simple table countries including columns
country_id,country_name and region_id. After this display the structure of bive structure .
->

 create table counter(c_id int ,c_name varchar(20),region_id int);
Query OK, 0 rows affected (0.02 sec)


3. Write an SQL statement to create a table named jobs including columns
job_id, job_title, min_salary, max_salary and check whether the max_salary amount exceeding the upper limit 25000. Also set job_id as
primary key and entering null values for job_title is not allowed.

-> 
mysql> create table jobs(job_id  int primary key ,job_title varchar(20) not null,min_salary decimal(7,2),max_salary decimal(7,2) check(max_salary>25000));
Query OK, 0 rows affected (0.01 sec)

mysql> desc jobs;
+------------+--------------+------+-----+---------+-------+
| Field      | Type         | Null | Key | Default | Extra |
+------------+--------------+------+-----+---------+-------+
| job_id     | int          | NO   | PRI | NULL    |       |
| job_title  | varchar(20)  | NO   |     | NULL    |       |
| min_salary | decimal(7,2) | YES  |     | NULL    |       |
| max_salary | decimal(7,2) | YES  |     | NULL    |       |
+------------+--------------+------+-----+---------+-------+
4 rows in set (0.00 sec)


4. Write a SQL statement to create a table named job_histry including columns
employee_id, start_date, end_date, job_id and department_id.

->  mysql> create table job_hist(e_id int ,start_date date,end_date date ,job_id int, department_id int);

5. Write an SQL statement to alter a table named countries to make sure that no
duplicate data against column country_id will be allowed at the time of
insertion.

->
mysql> alter table country
    -> modify c_id int not null;





6. Write an SQL statement to create a table named jobs including columns job_id,
job_title, min_salary and max_salary, and make sure that, the default value
for job_title is blank and min_salary is 8000 and max_salary is NULL will be
entered automatically at the time of insertion if no value assigned for the
specified columns.
->

    create table jobs(job_id int ,job_title varchar(30),min_salary decimal(7,4)
    -> check(min_salary>8000) ,max_salary decimal(7,4));




7. Create a Department table with following structure.

mysql> create table dept(dept_id decimal(4,0) ,dept_name  varchar(30) not null,Manager_id decimal(4,0),location_id int,primary key(dept_id,Manager_id));
Query OK, 0 rows affected (0.02 sec).




demo  syntax 
 alter table employee
    -> add foreign key(dept_id)
    -> REFERENCES department(dept_id);

8. Write an SQL statement to create a table employees including columns 
employee_id, first_name, last_name, email, phone_number hire_date, job_id, 
salary, commission, manager_id and department_id and make sure that, the 
employee_id column does not contain any duplicate value at the time of 
insertion and the foreign key columns combined by department_id and 
manager_id columns contain only those unique combination values, which 
combinations are exists in the departments table.

->    mysql> create table employee (emp_id int,first_name varchar(20),last_name varchar(20),email varchar(20),phone_num varchar(12) ,birth_date date ,job_id int ,salary decimal(7,2),commision decimal(4,2));
Query OK, 0 rows affected (0.06 sec)

mysql> create table department(manager_id int,dept_id int,
    -> primary key(manager_id,dept_id));
Query OK, 0 rows affected (0.01 sec)

mysql> alter table employee
    -> add foreign key(manager_id,dept_id)
    -> references department(manager_id,dept_id);
Query OK, 0 rows affected (0.08 sec)
Records: 0  Duplicates: 0  Warnings: 0

